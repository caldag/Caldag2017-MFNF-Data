%% About data_processing.m

%This code processes raw data generated by image_processing.m and produces
%several plots of the outputs. Image correction algorithm is implemented 
%in image_corr.m code.

%The code requires *xy.dat and *xz.dat files generated by image_processing.m 
%(* denotes frequency). The code should be either placed in the
%same folder with data or modified to be addressed properly.

%The code is ready to work with the experiment case D1.6-L4-Q0 at 15 Hz.
%Change freq and strdir parameters at lines 36 and 37 to try other cases.

%% IMPORTANT OUTPUTS:

% x: x- Position
% y: y- Position
% z: z- Position
% r: Radial position (sqrt(y^2+z^2))
% b: Nondimensionalized radial position: b= r/(Rch-Rh)
%                       Rch: Radius of channel
%                       Rh: Radius of swimmer head
%                       So, b=0 means swimmer is at center, b=1 means
%                       swimmer is touching the channel wall.
% thax: Orientation angle of the swimmer with the channel's long axis
% ux: Swimming velocity in x- direction
% vsw: Swimming velocity in y- direction
% wsw: Swimming velocity in z- direction
% vth: Swimming velocity in azimuthal direction

%%

clear all
close all

freq = 15;            % FREQUENCY, NEGATIVE IF GOING IN THE TAIL DIRECTION
strdir = 'D1.6-L4-Q0';% NAME OF THE DIRECTORY WHERE THE DATA FILE IS

PLOT = 1; %Boolean. Make PLOT=0 if you don't want the code to generate plots.

tch = .7; %Channel thickness
Rh = 0.4; %Head diameter
nsnell = 1.5; %Refractive index
lam = 1; %Wavelength of swimmer tail

FPS = 120; %Video frames per second
strdirs = {'D3-L4-Q0', 'D1.6-L4-Q0', 'D1.6-L1.5-Q0'};
kdir = 0;

for k = 1:length(strdirs)
    if strcmp(char(strdirs(k)),strdir); kdir = k; end
end

biasy=[0.1471 0.3 0.145];
biasz=[0 0 0.145]; %Bias parameters to centralize swimmer trajectory

if strfind(strdir,'D1.6') > 0 %Directory checks
    Rch = 0.8;
elseif strfind(strdir,'D3') > 0
    Rch = 1.5;
else
    disp(['Directory is not recognized']);
end
if strfind(strdir,'L1.5')
    L=1.5;
elseif strfind(strdir,'L4')
    L = 4;
else
    disp(['Directory is not recognized']);
end

epsr = Rch/1000; %Little eps value in case Rch=0
Ro  = Rch+tch;

absf = abs(freq);

if freq < 0
    frstr = strcat('-',num2str(abs(freq)));
else
    frstr = num2str(freq);
end

clear daty datz
filexy = strcat(frstr,'xy.dat'); %xy data
filexz = strcat(frstr,'xz.dat'); %xz data
daty = load(strcat('./',strdir,'/',filexy));
datz = load(strcat('./',strdir,'/',filexz));
fmovie = strcat('./',strdir,'/show_',frstr,'.avi');

%Savitsky-Golay parameters
nw = floor(FPS/abs(2*freq));
nsgfit = 4; wsg = 41;
nsgu = nsgfit;   wsgu = wsg;
nsgvth = nsgfit; wsgvth = wsg;wsgth = wsg;

halfw =  (wsg+1)/2-1;
[bsg,gsg] = sgolay(nsgfit,wsg);
[bsg1,gsgu] = sgolay(nsgu,wsgu);
[bsg2,gsgvth] = sgolay(nsgvth,wsgth);
hlfwu = halfw; hlfwvth = halfw;
xmin = 0; xmax = 100;

%Smoothing process

inds = find(daty(:,1) > xmin & daty(:,1) < xmax);
xmy = smooth(daty(inds,1),wsg,'sgolay',nsgfit);
xmz = smooth(datz(inds,1),wsg,'sgolay',nsgfit);
ym = smooth(daty(inds,2)-biasy(kdir),wsg,'sgolay',nsgfit);
zm = smooth(datz(inds,2)-biasz(kdir),wsg,'sgolay',nsgfit);
thxy  = smooth(daty(inds,3),wsg,'sgolay',nsgfit);
thxz = smooth(datz(inds,3),wsg,'sgolay',nsgfit);
dirxy = smooth(daty(inds,4),wsg,'sgolay',nsgfit);
dirxz = smooth(datz(inds,4),wsg,'sgolay',nsgfit);

x = .5*(xmy+xmz);
t = [0:1/FPS:(max(size(x))-1)/FPS]';

%Optical Correction Algorithm
rm = sqrt(ym.*ym + zm.*zm);
[y,z,r] = image_corr(ym,zm,Rch+tch,nsnell);

b = r/(Rch-Rh); %beta
th = atan2(z,y);
thh = atan2(z-mean(z),y-mean(y));
rh = sqrt((z-mean(z)).^2+(y-mean(y)).^2);

thy = thxy*pi/180; sthy = sin(thy); cthy = cos(thy);tanxy = tan(thy);
thz = thxz*pi/180; sthz = sin(thz); cthz = cos(thz); tanxz = tan(thz);

clear thax rt tht
thax = zeros(size(x)); rt = thax; tht = thax;

ax = sqrt(1./(1+tanxy.^2+tanxz.^2));
ay = tanxy.*ax;
az = tanxz.*ax;
thax = acos(ax);
at = sqrt(ay.*ay+az.*az);
yt = L*ay+y;
zt = L*az+z;
rt = sqrt(yt.*yt + zt.*zt);
tht = atan2(az,ay);
ahat = [ay'./at';az'./at'];
rhat = [y'./r';z'./r'];
rhhat = [(y'-mean(y))./rh';(z'-mean(z))./rh'];
thr2 = (th-tht);
thrh = acos(dot(ahat,rhhat));
cth = cos(th); sth = sin(th);
ar  =   cth.*ay + sth.*az;
ath =  -sth.*ay + cth.*az;
thr = atan2(ath,ar);
thxr = atan2(ar,ax);
thxth = atan2(ath,ax); %Orientation angles

disp(['mean r = ',num2str(mean(r))])
disp(['mean theta_ax = ',num2str(mean(thax))])
disp(['mean theta_r = ',num2str(mean(thr))])

p = polyfit(t,x,1); %Velocity calculations
usw = p(1);
dx = x-p(1)*t-p(2);
udx = zeros(size(dx));

hlfwu  = (wsgu+1)/2-1;
n1 = (wsgu+1)/2;
n2 =  length(t)-(wsgu+1)/2;
clear sg1; sg1 = zeros(size(t));

for n =n1:n2
    sg1(n) =dot(gsgu(:,2),x(n-hlfwu:n+hlfwu));
end

ux = sg1*FPS;
ux(1:n1) = ux(n1);
ux(n2:end) = ux(n2);

Usw = mean(ux);
Uswmax =  max(ux);
Uswmin = min(ux);

vsw = zeros(size(y)); %y- and z- direction velocities
wsw = zeros(size(z));
clear sg1v sg1w; sg1v = zeros(size(vsw)); sg1w = sg1v;
hlfwth  = (wsgth+1)/2-1;
n1 = (wsgth+1)/2;
n2 =  length(t)-(wsgth+1)/2;

for n =n1:n2
    sg1v(n) =dot(gsgvth(:,2),y(n-hlfwth:n+hlfwth));
    sg1w(n) =dot(gsgvth(:,2),z(n-hlfwth:n+hlfwth));
end

vsw = sg1v*FPS; wsw = sg1w*FPS;
vsw(1:n1-1) = vsw(n1);
vsw(n2+1:end) = vsw(n2);
wsw(1:n1-1) = wsw(n1);
wsw(n2+1:end) = wsw(n2);
Vsw = .5*(max(vsw)-min(vsw));
Wsw = .5*(max(wsw)-min(wsw));

vth = wsw.*cos(th) - vsw.*sin(th); %Azimuthal velocity
vth(1:n1) = vth(n1);
vth(n2:end) = vth(n2);
posx=0.1;posy=0.1;wdth = 0.8;hght=0.23;dy=0.01;
xmin = min(x)-10; xmax = max(x)+10;

ych1 = Rch*cos([0:.01:2*pi]);
zch1 = Rch*sin([0:.01:2*pi]);
xch1 = xmin*ones(size(ych1));
ych2 = ych1; zch2 = zch1; xch2 = xmax*ones(size(ych1));
yh = Rh*cos([0:.01:2*pi]);
zh = Rh*sin([0:.01:2*pi]);
xh = zeros(size(yh));
sx = [0:.1:L];

ymin = -Rch; ymax = Rch;
zmin = -Rch; zmax = Rch;

if PLOT
    %% Plot y, z, th_xy, th_xz vs. x
    figure(1); clf;
    subplot('Position',[posx,posy,wdth,hght])
    plot(x,thxy)
    xlabel('xsw [mm]'); ylabel('\theta_x_y');grid on;
    
    subplot('Position',[posx,posy+hght,wdth,hght])
    plot(x,thxz);
    ylabel('\theta_x_z');
    set(gca,'XTickLabel','');grid on;
    
    subplot('Position',[posx,posy+2*hght,wdth,hght]);
    plot(x,y,x,ym);ylabel('ysw [mm]'); axis('equal');
    set(gca,'XTickLabel','');grid on;
    
    subplot('Position',[posx,posy+3*hght,wdth,hght]);
    plot(x,z,x,zm); ylabel('zsw [mm]'); axis('equal');
    set(gca,'XTickLabel','');grid on;
    
    %% Orientation angle vs. radial position
    
    figure(2);
    subplot(211)
    plot(th*180/pi,thy*180/pi,'.',...
        th*180/pi,thz*180/pi,'.',...
        th*180/pi,thr*180/pi,'o',...
        th*180/pi,thax*180/pi,'.')
    xlabel('\theta_s_w [deg]'); ylabel('\theta [deg]');legend('\theta_x_y','\theta_x_z','\theta_r','\theta_a_x')
    grid on
    subplot(212)
    plot(r,thr*180/pi,'bo',r,thr2*180/pi,'b*',...
        rh,thrh*180/pi,'ro');
    xlabel('r_s_w [mm]'); ylabel('\theta_r');
    legend('\theta_r','\theta_r_,_2','\theta_r_,_t_r_a_j')
    grid on
    
    %% x, dx, ux and beta vs. time
    
    figure(3)
    nplot = 4;
    hght = (1-posy-nplot*dy)/nplot;
    subplot('Position',[posx,posy+3*(hght+dy),wdth,hght])
    plot(t,x); ylabel('xsw [mm]');set(gca,'XTickLabel','');
    grid on
    axis([0 max(t) min(x) max(x)])
    
    subplot('Position',[posx,posy+2*(hght+dy),wdth,hght])
    
    plot(t,dx,'o',t,dx,'.:');
    ylabel('\Delta_x [mm]');set(gca,'XTickLabel','');
    axis([0 max(t) min(dx) max(dx)])
    grid on
    
    subplot('Position',[posx,posy+hght+dy,wdth,hght])
    plot(t,ux);
    ylabel('ux [mm/s]');set(gca,'XTickLabel','');
    axis([0 max(t) min(ux) max(ux)])
    grid on;
    subplot('Position',[posx,posy,wdth,hght])
    plot(t,b,'.');
    ylabel('\beta');xlabel('t [s]');
    axis([0 max(t) 0 1])
    grid on
    
    disp(['Mean Usw = ',num2str(mean(ux))]);
    disp(['Max Usw = ',num2str(max(ux))]);
    disp(['Min Usw = ',num2str(min(ux))]);
    
    %% Orientation angles in x-y, ux, beta altogether
    
    figure(4)
    nplot = 6;
    hght = (1-posy-nplot*dy)/nplot;
    subplot('Position',[posx,posy+(nplot-1)*(hght+dy),wdth,hght])
    plot(t,thy); ylabel('\theta_x_y');set(gca,'XTickLabel','');
    grid on
    axis([0 max(t) min(thy) max(thy)])
    
    subplot('Position',[posx,posy+(nplot-2)*(hght+dy),wdth,hght])
    plot(t,thz);
    ylabel('\theta_x_z');set(gca,'XTickLabel','');
    axis([0 max(t) min(thz) max(thz)])
    grid on
    
    subplot('Position',[posx,posy+(nplot-3)*(hght+dy),wdth,hght])
    plot(t,thr);
    ylabel('\theta_r');set(gca,'XTickLabel','');
    axis([0 max(t) min(thr) max(thr)])
    grid on
    
    subplot('Position',[posx,posy+(nplot-4)*(hght+dy),wdth,hght])
    plot(t,thax);
    ylabel('\theta_a_x');set(gca,'XTickLabel','');
    axis([0 max(t) 0 max(thax)])
    grid on
    subplot('Position',[posx,posy+hght+dy,wdth,hght])
    plot(t,ux);
    ylabel('ux [mm/s]');set(gca,'XTickLabel','');
    axis([0 max(t) min(ux) max(ux)])
    grid on;
    
    subplot('Position',[posx,posy,wdth,hght])
    plot(t,b,'.');
    ylabel('\beta');xlabel('t [s]');
    axis([0 max(t) 0 1])
    grid on
    
    %% Orientation angles in r-theta, ux, beta altogether
    
    figure(5)
    nplot = 5;
    hght = (1-posy-nplot*dy)/nplot;
    subplot('Position',[posx,posy+(nplot-1)*(hght+dy),wdth,hght])
    plot(t,thxr*180/pi); ylabel('\theta_x_r');set(gca,'XTickLabel','');
    grid on
    axis([0 max(t) min(thxr*180/pi) max(thxr*180/pi)])
    
    subplot('Position',[posx,posy+(nplot-2)*(hght+dy),wdth,hght])
    plot(t,thxth*180/pi);
    ylabel('\theta_x_\theta');set(gca,'XTickLabel','');
    axis([0 max(t) min(thxth*180/pi) max(thxth*180/pi)])
    grid on
    
    subplot('Position',[posx,posy+(nplot-3)*(hght+dy),wdth,hght])
    plot(t,thax*180/pi);
    ylabel('\theta_a_x');set(gca,'XTickLabel','');
    axis([0 max(t) 0 max(thax*180/pi)])
    grid on
    subplot('Position',[posx,posy+hght+dy,wdth,hght])
    plot(t,(ux));
    ylabel('u_x [mm/s]');set(gca,'XTickLabel','');
    axis([0 max(t) min((ux)) max((ux))])
    grid on;
    
    subplot('Position',[posx,posy,wdth,hght])
    plot(t,b,'.');
    ylabel('\beta');xlabel('t [s]');
    axis([0 max(t) 0 1])
    grid on
    
    %% Radial position and change of velocity
    
    figure(6)
    scatter3(y,z,ux,10,ux); grid on
    
    %% u_x, beta and v_theta (azimuthal velocity)
    
    figure(7)
    nplot = 3;
    hght = (1-posy-nplot*dy)/nplot;
    px0 = .1; py0 = .1; pdy = 0.03; pw = .8; phg = hght;
    subplot('Position',[px0,py0,pw,phg])
    plot(t,vth)
    xlabel('t')
    ylabel('v_\theta')
    grid on;
    ylabel('vth')
    subplot('Position',[px0,py0+dy+phg,pw,phg])
    plot(t,b)
    grid on
    ylabel('\beta')
    set(gca,'XTickLabel','');
    subplot('Position',[px0,py0+2*dy+2*phg,pw,phg])
    plot(t,ux)
    ylabel('u_x')
    grid on
    set(gca,'XTickLabel','');
    
    %% Head and tail tip positions in y-z plane
    
    figure(8)
    plot(yt,zt,'.',ych1,zch1);axis('square');
    axis([-Rch Rch -Rch Rch])
    hold on
    scatter(y,z,8,ux,'filled')
    plot(ym,zm,'o')
    hold off
    grid on
    
    %% Swimmer position in y-z plane, beta, r_sw
    
    figure(9);
    nplot = 4;
    hght = (1-posy-nplot*dy)/nplot;
    subplot('Position',[posx,posy,wdth,hght])
    plot(x,rm,x,r);grid on;
    ylabel('rsw [mm]'); xlabel('xsw [mm]');
    axis([min(x),max(x),0,Rch])
    legend('r_m_e_a_s_u_r_e_d','r_c_o_r_r_e_c_t_e_d')
    grid on;
    
    subplot('Position',[posx,posy+hght+dy,wdth,hght])
    plot(x,b);grid on;xlabel('xsw [mm]');ylabel('\beta');
    set(gca,'XTickLabel','');
    
    subplot('Position',[posx,posy+2*hght+2*dy,wdth,2*hght])
    plot(Rch*cos([0:.1:2*pi]),Rch*sin([0:.1:2*pi]),'k-');
    hold on
    xlabel('ysw [mm]'),ylabel('zsw [mm]'); axis ('equal');
    scatter(y,z,5,ux,'filled')
    hold off
    grid on
    
    %% u_sw, orientation angle th_ax, r_sw and r_tail
    
    figure(10)
    nplot = 4;
    tmin = min(t);
    hght = (1-posy-nplot*dy)/nplot;
    subplot('Position',[posx,posy,wdth,hght])
    plot(t,rt); ylabel('r_t_a_i_l [mm]');grid on;
    axis([tmin max(t) min(rt) max(rt)])
    xlabel('t [s]')
    
    subplot('Position',[posx,posy+hght+dy,wdth,hght])
    plot(t,r);grid on;ylabel('r_s_w [mm]');
    axis([tmin max(t) min(r) max(r)])
    set(gca,'XTickLabel','');
    
    subplot('Position',[posx,posy+2*hght+2*dy,wdth,hght])
    
    plot(t,thax*180/pi);
    ylabel('\theta_a_x [^o]');set(gca,'XTickLabel','');
    grid on
    axis([tmin max(t) min(thax*180/pi) max(thax*180/pi)])
    
    subplot('Position',[posx,posy+3*hght+3*dy,wdth,hght])
    
    plot(t,abs(ux)); grid on; ylabel('|U_s_w| [mm/s]');
    set(gca,'XTickLabel','');
    axis([tmin max(t) min(abs(ux)) max(abs(ux))])
    grid on
    ind = [wsg:length(ux)-wsg];
    tmp = [abs(ux(ind)');thax(ind)';r(ind)';rt(ind)']';
    
end